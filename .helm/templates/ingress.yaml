apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.werf.name }}-frontend
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
    {{ if eq .Values.frontend.auth true}}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    {{ end }}
spec:
  tls:
  - hosts:
        - {{ .Values.frontend.url }}
    secretName: {{ .Values.werf.name }}-{{ .Values.werf.env }}-ssl
  rules:
  - host: {{ .Values.frontend.url }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.werf.name }}-frontend
            port:
              number: {{ $.Values.frontend.port }}
{{ if .Values.frontend.www }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.werf.name }}-frontend-with-www
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($host = 'www.{{ .Values.frontend.url }}') {
        return 301 https://{{ .Values.frontend.url }}$request_uri;
      }
spec:
  rules:
  - host: www.{{ .Values.frontend.url }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.werf.name }}-frontend
            port:
              number: {{ $.Values.frontend.port }}
{{ end }}